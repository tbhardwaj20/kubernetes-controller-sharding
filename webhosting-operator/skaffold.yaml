---
apiVersion: skaffold/v2beta29
kind: Config
metadata:
  name: webhosting-operator
build:
  local:
    concurrency: 0
  artifacts:
  - image: ghcr.io/timebertt/kubernetes-controller-sharding/webhosting-operator
    ko:
      main: ./cmd/webhosting-operator
      dependencies:
        paths:
        - "**/*.go"
        - "../../../../sigs.k8s.io/controller-runtime/**/*.go"
deploy:
  kustomize:
    flags:
      apply:
      - "--server-side"
      - "--force-conflicts"
    paths:
    - config/manager/default
  kubectl:
    manifests:
    - config/samples/project_namespace.yaml
profiles:
- name: debug
  activation:
  - command: debug
  patches:
  - op: replace
    path: /deploy/kustomize/paths/0
    value: config/manager/debug
- name: shard
  patches:
  - op: replace
    path: /deploy/kustomize/paths/0
    value: config/manager/shard
portForward:
- resourceType: deployment
  namespace: webhosting-operator-system
  resourceName: webhosting-operator-controller-manager
  port: metrics
  localPort: 8081
---
apiVersion: skaffold/v2beta29
kind: Config
metadata:
  name: monitoring-crds
deploy:
  kustomize:
    flags:
      apply:
      - "--server-side"
      - "--force-conflicts"
    paths:
    - config/monitoring/crds
---
apiVersion: skaffold/v2beta29
kind: Config
metadata:
  name: monitoring
requires:
- configs:
  - monitoring-crds
build:
  local:
    concurrency: 0
  artifacts:
  - image: ghcr.io/timebertt/kubernetes-controller-sharding/webhosting-exporter
    ko:
      main: ./cmd/webhosting-exporter
deploy:
  kustomize:
    flags:
      apply:
      - "--server-side"
      - "--force-conflicts"
    hooks:
      before:
      - host:
          command:
          - bash
          - -c
          - '[ -f config/monitoring/default/grafana_admin_pass.secret.txt ] || cat /dev/urandom | tr -dc "a-zA-Z0-9" | head -c 32 > config/monitoring/default/grafana_admin_pass.secret.txt'
    paths:
    - config/monitoring/default
profiles:
- name: k3d
  activation:
  - kubeContext: k3d-webhosting
  deploy:
    kustomize:
      paths:
      - config/monitoring/k3d
portForward:
- resourceType: service
  namespace: monitoring
  resourceName: grafana
  port: http
  localPort: 3000
- resourceType: service
  namespace: monitoring
  resourceName: prometheus-k8s
  port: web
  localPort: 9090
