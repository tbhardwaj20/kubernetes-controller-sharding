apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: kyverno
manifests:
  kustomize:
    paths:
    - config/kyverno
deploy:
  kubectl:
    defaultNamespace: ""
    flags:
      apply:
      - --server-side
      - --force-conflicts
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: policy
requires:
- configs:
  - kyverno
manifests:
  kustomize:
    paths:
    - config/policy/default
deploy:
  kubectl:
    defaultNamespace: ""
    flags:
      apply:
      - --server-side
      - --force-conflicts
  statusCheck: false
profiles:
- name: shoot
  activation:
  - kubeContext: .*timebertt--sharding.*
  manifests:
    kustomize:
      paths:
      - config/policy/shoot
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: webhosting-operator
build:
  local:
    concurrency: 0
  artifacts:
  - image: ghcr.io/timebertt/kubernetes-controller-sharding/webhosting-operator
    ko:
      main: ./cmd/webhosting-operator
      dependencies:
        paths:
        - go.mod
        - '**/*.go'
        - ../../../../sigs.k8s.io/controller-runtime/**/*.go
manifests:
  kustomize:
    paths:
    - config/manager/default
deploy:
  kubectl:
    defaultNamespace: ""
    flags:
      apply:
      - --server-side
      - --force-conflicts
    hooks:
      before:
      - host:
          command:
          # ensure CRDs and RBAC are up-to-date
          - make
          - manifests
profiles:
- name: debug
  activation:
  - command: debug
  patches:
  - op: replace
    path: /manifests/kustomize/paths/0
    value: config/manager/debug
- name: shard
  patches:
  - op: replace
    path: /manifests/kustomize/paths/0
    value: config/manager/shard
- name: shoot
  activation:
  - kubeContext: .*timebertt--sharding.*
  patches:
  - op: replace
    path: /manifests/kustomize/paths/0
    value: config/manager/shoot
- name: shoot-non-sharded
  patches:
  - op: replace
    path: /manifests/kustomize/paths/0
    value: config/manager/shoot-non-sharded
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: experiment
profiles:
- name: expirement
  activation:
  - env: EXPERIMENT_SCENARIO=.+
  build:
    local:
      concurrency: 0
    artifacts:
    - image: ghcr.io/timebertt/kubernetes-controller-sharding/experiment
      ko:
        main: ./cmd/experiment
        dependencies:
          paths:
          - go.mod
          - '**/*.go'
          - ../../../../sigs.k8s.io/controller-runtime/**/*.go
  manifests:
    kustomize:
      paths:
      - config/experiment/{{ .EXPERIMENT_SCENARIO }}
  deploy:
    kubectl:
      hooks:
        before:
          - host:
              command:
              - /usr/bin/env
              - bash
              - -c
              - |
                active_pods="$(kubectl -n experiment get job experiment -ojsonpath='{.status.active}' 2>dev/null)"
                if [ "${active_pods:-0}" -gt 0 ] && [ -z "$EXPERIMENT_DELETE_FORCE" ] ; then
                  echo "Experiment is running currently, refusing to delete the job. Set EXPERIMENT_DELETE_FORCE to override."
                  exit 1
                fi
                kubectl -n experiment delete job experiment --ignore-not-found --wait=true
      defaultNamespace: ""
      flags:
        apply:
        - --server-side
        - --force-conflicts
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: monitoring-crds
manifests:
  kustomize:
    paths:
    - config/monitoring/crds
deploy:
  kubectl:
    defaultNamespace: ""
    flags:
      apply:
      - --server-side
      - --force-conflicts
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: monitoring
requires:
- configs:
  - monitoring-crds
manifests:
  kustomize:
    paths:
    - config/monitoring/default
  hooks:
    before:
    - host:
        command:
        - config/monitoring/default/ensure-admin-password.sh
deploy:
  kubectl:
    defaultNamespace: ""
    flags:
      apply:
      - --server-side
      - --force-conflicts
profiles:
- name: shoot
  activation:
  - kubeContext: .*timebertt--sharding.*
  manifests:
    kustomize:
      paths:
      - config/monitoring/shoot
portForward:
- resourceType: service
  namespace: monitoring
  resourceName: grafana
  port: http
  localPort: 3000
- resourceType: service
  namespace: monitoring
  resourceName: prometheus-k8s
  port: web
  localPort: 9090
---
apiVersion: skaffold/v4beta6
kind: Config
metadata:
  name: profiling
# profiling config disabled by default, can be enabled with profile "profiling"
profiles:
- name: profiling
  manifests:
    kustomize:
      paths:
      - config/profiling
  deploy:
    kubectl:
      defaultNamespace: ""
      flags:
        apply:
        - --server-side
        - --force-conflicts
  portForward:
  - resourceType: service
    namespace: parca
    resourceName: parca
    port: http
    localPort: 7070
